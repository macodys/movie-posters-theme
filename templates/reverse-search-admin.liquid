{% comment %}
  Reverse Image Search Admin Interface
  Access this at: /pages/reverse-search-admin
{% endcomment %}

<div class="reverse-search-admin">
  <div class="admin-header">
    <h1>Reverse Image Search Tool</h1>
    <p>Find original source images for your products</p>
  </div>

  <div class="admin-content">
    <!-- Upload Section -->
    <div class="upload-section">
      <h2>Upload Product Image</h2>
      <div class="upload-area" id="uploadArea">
        <div class="upload-content">
          <svg class="upload-icon" width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"></path>
            <polyline points="7,10 12,15 17,10"></polyline>
            <line x1="12" y1="15" x2="12" y2="3"></line>
          </svg>
          <p>Drag & drop your product image here</p>
          <p class="upload-subtitle">or click to browse</p>
          <input type="file" id="imageInput" accept="image/*" hidden>
        </div>
      </div>
    </div>

    <!-- Product Info Section -->
    <div class="product-info-section" id="productInfoSection" style="display: none;">
      <h2>Product Information</h2>
      <div class="form-group">
        <label for="productTitle">Product Title:</label>
        <input type="text" id="productTitle" placeholder="Enter product title for better matching">
      </div>
      <div class="form-group">
        <label for="productYear">Year (optional):</label>
        <input type="number" id="productYear" placeholder="e.g., 2023" min="1900" max="2030">
      </div>
      <button id="searchButton" class="search-btn">Search for Original Image</button>
    </div>

    <!-- Search Results Section -->
    <div class="results-section" id="resultsSection" style="display: none;">
      <h2>Search Results</h2>
      <div class="search-status" id="searchStatus">
        <div class="loading-spinner"></div>
        <p>Searching for original images...</p>
      </div>
      
      <div class="results-grid" id="resultsGrid" style="display: none;">
        <!-- Results will be populated here -->
      </div>
    </div>

    <!-- Instructions Section -->
    <div class="instructions-section">
      <h2>How to Use</h2>
      <div class="instructions-grid">
        <div class="instruction-step">
          <div class="step-number">1</div>
          <h3>Upload Image</h3>
          <p>Upload your current product image by dragging and dropping or clicking to browse.</p>
        </div>
        <div class="instruction-step">
          <div class="step-number">2</div>
          <h3>Add Context</h3>
          <p>Enter the product title and year to help improve search accuracy.</p>
        </div>
        <div class="instruction-step">
          <div class="step-number">3</div>
          <h3>Search & Select</h3>
          <p>Click search to find original images, then select the best match.</p>
        </div>
        <div class="instruction-step">
          <div class="step-number">4</div>
          <h3>Download</h3>
          <p>Download the high-quality original image to replace your current one.</p>
        </div>
      </div>
    </div>
  </div>
</div>

<style>
.reverse-search-admin {
  max-width: 1200px;
  margin: 0 auto;
  padding: 2rem;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
}

.admin-header {
  text-align: center;
  margin-bottom: 3rem;
}

.admin-header h1 {
  font-size: 2.5rem;
  color: #333;
  margin-bottom: 0.5rem;
}

.admin-header p {
  font-size: 1.1rem;
  color: #666;
}

.upload-section {
  margin-bottom: 3rem;
}

.upload-area {
  border: 2px dashed #ddd;
  border-radius: 12px;
  padding: 3rem;
  text-align: center;
  cursor: pointer;
  transition: all 0.3s ease;
  background: #fafafa;
}

.upload-area:hover {
  border-color: #007bff;
  background: #f0f8ff;
}

.upload-area.dragover {
  border-color: #007bff;
  background: #e6f3ff;
}

.upload-content {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1rem;
}

.upload-icon {
  color: #666;
}

.upload-subtitle {
  color: #999;
  font-size: 0.9rem;
}

.product-info-section {
  background: #f8f9fa;
  padding: 2rem;
  border-radius: 12px;
  margin-bottom: 3rem;
}

.form-group {
  margin-bottom: 1.5rem;
}

.form-group label {
  display: block;
  margin-bottom: 0.5rem;
  font-weight: 600;
  color: #333;
}

.form-group input {
  width: 100%;
  padding: 0.75rem;
  border: 1px solid #ddd;
  border-radius: 6px;
  font-size: 1rem;
}

.search-btn {
  background: #007bff;
  color: white;
  border: none;
  padding: 1rem 2rem;
  border-radius: 6px;
  font-size: 1rem;
  font-weight: 600;
  cursor: pointer;
  transition: background 0.3s ease;
}

.search-btn:hover {
  background: #0056b3;
}

.search-btn:disabled {
  background: #ccc;
  cursor: not-allowed;
}

.results-section {
  margin-bottom: 3rem;
}

.search-status {
  text-align: center;
  padding: 2rem;
}

.loading-spinner {
  width: 40px;
  height: 40px;
  border: 4px solid #f3f3f3;
  border-top: 4px solid #007bff;
  border-radius: 50%;
  animation: spin 1s linear infinite;
  margin: 0 auto 1rem;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.results-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  gap: 2rem;
  margin-top: 2rem;
}

.result-card {
  border: 1px solid #ddd;
  border-radius: 12px;
  overflow: hidden;
  background: white;
  box-shadow: 0 2px 8px rgba(0,0,0,0.1);
  transition: transform 0.3s ease;
}

.result-card:hover {
  transform: translateY(-4px);
}

.result-image {
  width: 100%;
  height: 200px;
  object-fit: cover;
}

.result-info {
  padding: 1.5rem;
}

.result-title {
  font-size: 1.1rem;
  font-weight: 600;
  margin-bottom: 0.5rem;
  color: #333;
}

.result-source {
  color: #666;
  font-size: 0.9rem;
  margin-bottom: 1rem;
}

.result-actions {
  display: flex;
  gap: 0.5rem;
}

.btn {
  padding: 0.5rem 1rem;
  border: none;
  border-radius: 6px;
  font-size: 0.9rem;
  cursor: pointer;
  transition: background 0.3s ease;
}

.btn-primary {
  background: #007bff;
  color: white;
}

.btn-primary:hover {
  background: #0056b3;
}

.btn-secondary {
  background: #6c757d;
  color: white;
}

.btn-secondary:hover {
  background: #545b62;
}

.instructions-section {
  background: #f8f9fa;
  padding: 2rem;
  border-radius: 12px;
}

.instructions-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: 2rem;
  margin-top: 2rem;
}

.instruction-step {
  text-align: center;
}

.step-number {
  width: 40px;
  height: 40px;
  background: #007bff;
  color: white;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  font-weight: bold;
  margin: 0 auto 1rem;
}

.instruction-step h3 {
  margin-bottom: 0.5rem;
  color: #333;
}

.instruction-step p {
  color: #666;
  line-height: 1.5;
}

@media (max-width: 768px) {
  .reverse-search-admin {
    padding: 1rem;
  }
  
  .admin-header h1 {
    font-size: 2rem;
  }
  
  .upload-area {
    padding: 2rem;
  }
  
  .results-grid {
    grid-template-columns: 1fr;
  }
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const uploadArea = document.getElementById('uploadArea');
  const imageInput = document.getElementById('imageInput');
  const productInfoSection = document.getElementById('productInfoSection');
  const resultsSection = document.getElementById('resultsSection');
  const searchButton = document.getElementById('searchButton');
  const searchStatus = document.getElementById('searchStatus');
  const resultsGrid = document.getElementById('resultsGrid');

  let currentImageFile = null;
  let reverseSearch = null;

  // Initialize reverse search
  if (typeof FreeReverseSearch !== 'undefined') {
    reverseSearch = new FreeReverseSearch();
  }

  // Upload area click handler
  uploadArea.addEventListener('click', () => {
    imageInput.click();
  });

  // Drag and drop handlers
  uploadArea.addEventListener('dragover', (e) => {
    e.preventDefault();
    uploadArea.classList.add('dragover');
  });

  uploadArea.addEventListener('dragleave', () => {
    uploadArea.classList.remove('dragover');
  });

  uploadArea.addEventListener('drop', (e) => {
    e.preventDefault();
    uploadArea.classList.remove('dragover');
    const files = e.dataTransfer.files;
    if (files.length > 0) {
      handleImageUpload(files[0]);
    }
  });

  // File input handler
  imageInput.addEventListener('change', (e) => {
    if (e.target.files.length > 0) {
      handleImageUpload(e.target.files[0]);
    }
  });

  // Search button handler
  searchButton.addEventListener('click', () => {
    if (currentImageFile && reverseSearch) {
      performSearch();
    }
  });

  function handleImageUpload(file) {
    if (!file.type.startsWith('image/')) {
      alert('Please select an image file.');
      return;
    }

    currentImageFile = file;
    
    // Show product info section
    productInfoSection.style.display = 'block';
    
    // Update upload area to show selected file
    uploadArea.innerHTML = `
      <div class="upload-content">
        <svg class="upload-icon" width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"></path>
          <polyline points="7,10 12,15 17,10"></polyline>
          <line x1="12" y1="15" x2="12" y2="3"></line>
        </svg>
        <p>Selected: ${file.name}</p>
        <p class="upload-subtitle">Click to change image</p>
      </div>
    `;
  }

  async function performSearch() {
    if (!currentImageFile || !reverseSearch) {
      alert('Please upload an image first.');
      return;
    }

    const productTitle = document.getElementById('productTitle').value;
    const productYear = document.getElementById('productYear').value;

    // Show results section
    resultsSection.style.display = 'block';
    searchStatus.style.display = 'block';
    resultsGrid.style.display = 'none';

    try {
      // Perform reverse image search
      const results = await reverseSearch.searchImage(currentImageFile, productTitle);
      
      // Hide loading and show results
      searchStatus.style.display = 'none';
      displayResults(results);
      
    } catch (error) {
      searchStatus.innerHTML = `
        <div style="color: #dc3545;">
          <p>Search failed: ${error.message}</p>
          <p>Please try again or check your internet connection.</p>
        </div>
      `;
    }
  }

  function displayResults(results) {
    resultsGrid.innerHTML = '';
    
    if (results.error) {
      resultsGrid.innerHTML = `
        <div style="text-align: center; color: #dc3545; padding: 2rem;">
          <p>Search failed: ${results.error}</p>
        </div>
      `;
      resultsGrid.style.display = 'block';
      return;
    }

    // Display Google search results
    if (results.google && results.google.url) {
      const googleCard = createResultCard({
        title: 'Google Reverse Search',
        source: 'Google Images',
        url: results.google.url,
        instructions: results.google.instructions
      });
      resultsGrid.appendChild(googleCard);
    }

    // Display Bing results
    if (results.bing && results.bing.similarImages) {
      results.bing.similarImages.forEach((image, index) => {
        const card = createResultCard({
          title: image.title || `Bing Result ${index + 1}`,
          source: 'Bing Visual Search',
          url: image.contentUrl,
          thumbnail: image.thumbnailUrl,
          width: image.width,
          height: image.height
        });
        resultsGrid.appendChild(card);
      });
    }

    // Display best match if available
    if (results.bestMatch) {
      const bestMatchCard = createResultCard({
        title: `Best Match: ${results.bestMatch.title || 'Unknown'}`,
        source: 'Combined Results',
        url: results.bestMatch.contentUrl || results.bestMatch.url,
        thumbnail: results.bestMatch.thumbnailUrl,
        width: results.bestMatch.width,
        height: results.bestMatch.height,
        score: results.bestMatch.score
      });
      resultsGrid.insertBefore(bestMatchCard, resultsGrid.firstChild);
    }

    if (resultsGrid.children.length === 0) {
      resultsGrid.innerHTML = `
        <div style="text-align: center; color: #666; padding: 2rem;">
          <p>No results found. Try uploading a different image or adding more context.</p>
        </div>
      `;
    }

    resultsGrid.style.display = 'block';
  }

  function createResultCard(data) {
    const card = document.createElement('div');
    card.className = 'result-card';
    
    const imageHtml = data.thumbnail ? 
      `<img src="${data.thumbnail}" alt="${data.title}" class="result-image">` :
      `<div class="result-image" style="background: #f0f0f0; display: flex; align-items: center; justify-content: center; color: #666;">No Preview</div>`;
    
    const scoreHtml = data.score ? 
      `<div style="color: #28a745; font-size: 0.8rem; margin-bottom: 0.5rem;">Match Score: ${(data.score * 100).toFixed(1)}%</div>` : '';
    
    card.innerHTML = `
      ${imageHtml}
      <div class="result-info">
        <div class="result-title">${data.title}</div>
        ${scoreHtml}
        <div class="result-source">Source: ${data.source}</div>
        <div class="result-actions">
          <button class="btn btn-primary" onclick="window.open('${data.url}', '_blank')">View Source</button>
          ${data.url && data.url.startsWith('http') ? 
            `<button class="btn btn-secondary" onclick="downloadImage('${data.url}', '${data.title.replace(/[^a-z0-9]/gi, '_')}.jpg')">Download</button>` : 
            ''
          }
        </div>
      </div>
    `;
    
    return card;
  }

  // Global function for downloading images
  window.downloadImage = async function(url, filename) {
    try {
      const response = await fetch(url);
      const blob = await response.blob();
      const downloadUrl = window.URL.createObjectURL(blob);
      
      const a = document.createElement('a');
      a.href = downloadUrl;
      a.download = filename;
      document.body.appendChild(a);
      a.click();
      document.body.removeChild(a);
      window.URL.revokeObjectURL(downloadUrl);
    } catch (error) {
      alert('Download failed: ' + error.message);
    }
  };
});
</script>
